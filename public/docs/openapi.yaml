openapi: 3.0.3
info:
  title: 'ENTREPRISE X '
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tvazgcbnfh
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: shanna11@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '3}"4''|s/[<A#y''WG=o'
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: coby.sporer@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: ..e_;uh0G(
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/clients:
    get:
      summary: ''
      operationId: getApiClients
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dejah84@example.com
                  nullable: false
                email_verified_at:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: false
                two_factor_secret:
                  type: string
                  description: ''
                  example: corporis
                  nullable: false
                two_factor_recovery_codes:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                remember_token:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ciprw
                  nullable: false
                current_team_id:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
                profile_photo_path:
                  type: string
                  description: ''
                  example: veniam
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  '/api/users/{id}':
    get:
      summary: ''
      operationId: getApiUsersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: elbert83@example.com
                  nullable: false
                email_verified_at:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: false
                two_factor_secret:
                  type: string
                  description: ''
                  example: perferendis
                  nullable: false
                two_factor_recovery_codes:
                  type: string
                  description: ''
                  example: saepe
                  nullable: false
                remember_token:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: qynczeszcjjnhjvhgdwpgbqfb
                  nullable: false
                current_team_id:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
                profile_photo_path:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
    delete:
      summary: ''
      operationId: deleteApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/organisations:
    get:
      summary: ''
      operationId: getApiOrganisations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiOrganisations
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: nzncwyccxnylabqgfyib
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Praesentium illo nemo quia inventore.'
                  nullable: false
              required:
                - user_id
                - name
      security: []
  '/api/organisations/{id}':
    get:
      summary: ''
      operationId: getApiOrganisationsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiOrganisationsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: fxmhuhmmvlanowedlwhf
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Accusantium laborum in et nesciunt.'
                  nullable: false
              required:
                - user_id
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiOrganisationsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the organisation.'
        example: 1
        required: true
        schema:
          type: integer
  /api/members:
    get:
      summary: ''
      operationId: getApiMembers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiMembers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: jynvcqnmxxoiaxazsjx
                  nullable: false
                last_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: gy
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: sdurgan@example.com
                  nullable: false
                title:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: potsshnjpaewzcfgpmf
                  nullable: false
                profile_image:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tommdalihtthnl
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 30 characters.'
                  example: ytzzqzhdgb
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'A et dolores voluptate velit sed autem et.'
                  nullable: false
                is_active:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
                organisation_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the organisations table.'
                  example: 2
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: false
              required:
                - last_name
                - email
                - title
                - is_active
      security: []
  '/api/members/{id}':
    get:
      summary: ''
      operationId: getApiMembersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiMembersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: jsydhqjiaknw
                  nullable: false
                last_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: qcaapdbuibr
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: mdavis@example.com
                  nullable: false
                title:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: ubfmltjmdqbyrcn
                  nullable: false
                profile_image:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bf
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 30 characters.'
                  example: nkveoowuxekvocnlperbsh
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Cum repellendus praesentium quibusdam quod recusandae accusantium.'
                  nullable: false
                is_active:
                  type: string
                  description: ''
                  example: illo
                  nullable: false
                organisation_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the organisations table.'
                  example: 11
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: false
              required:
                - last_name
                - email
                - title
                - is_active
      security: []
    delete:
      summary: ''
      operationId: deleteApiMembersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the member.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transaction_types:
    get:
      summary: ''
      operationId: getApiTransaction_types
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTransaction_types
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: mosv
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Voluptatibus ut optio ut aut doloremque natus maxime aut.'
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: false
              required:
                - name
                - user_id
      security: []
  '/api/transaction_types/{id}':
    get:
      summary: ''
      operationId: getApiTransaction_typesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTransaction_typesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: dhlz
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Quos libero maxime eaque numquam.'
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: false
              required:
                - name
                - user_id
      security: []
    delete:
      summary: ''
      operationId: deleteApiTransaction_typesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction type.'
        example: 3
        required: true
        schema:
          type: integer
  /api/transactions:
    get:
      summary: ''
      operationId: getApiTransactions
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTransactions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: false
                member_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the members table.'
                  example: 5
                  nullable: false
                transaction_type_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the transaction_types table.'
                  example: 13
                  nullable: false
                montant:
                  type: number
                  description: ''
                  example: 30167910.157569
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Fuga accusantium et fugiat eos iure ullam non.'
                  nullable: false
                date_transaction:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T09:13:33'
                  nullable: false
              required:
                - user_id
                - member_id
                - transaction_type_id
                - montant
                - date_transaction
      security: []
  '/api/transactions/{id}':
    get:
      summary: ''
      operationId: getApiTransactionsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTransactionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: false
                member_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the members table.'
                  example: 11
                  nullable: false
                transaction_type_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the transaction_types table.'
                  example: 4
                  nullable: false
                montant:
                  type: number
                  description: ''
                  example: 7817.16
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Sit rem dignissimos voluptate et ipsa ut.'
                  nullable: false
                date_transaction:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T09:13:33'
                  nullable: false
              required:
                - user_id
                - member_id
                - transaction_type_id
                - montant
                - date_transaction
      security: []
    delete:
      summary: ''
      operationId: deleteApiTransactionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: 9
        required: true
        schema:
          type: integer
  /api/transaction_files:
    get:
      summary: ''
      operationId: getApiTransaction_files
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTransaction_files
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ihflmwtd
                  nullable: false
                file_url:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'http://www.gerhold.com/'
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: false
                transaction_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the transactions table.'
                  example: 18
                  nullable: false
              required:
                - name
                - file_url
                - user_id
                - transaction_id
      security: []
  '/api/transaction_files/{id}':
    get:
      summary: ''
      operationId: getApiTransaction_filesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTransaction_filesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tynjexrxkydepp
                  nullable: false
                file_url:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'http://jacobs.com/deleniti-tenetur-dolorum-et-commodi'
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: false
                transaction_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the transactions table.'
                  example: 9
                  nullable: false
              required:
                - name
                - file_url
                - user_id
                - transaction_id
      security: []
    delete:
      summary: ''
      operationId: deleteApiTransaction_filesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction file.'
        example: 13
        required: true
        schema:
          type: integer
  /api/notifications:
    get:
      summary: ''
      operationId: getApiNotifications
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiNotifications
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: false
                message:
                  type: string
                  description: ''
                  example: sint
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Voluptas enim rerum rerum et est omnis voluptates tenetur.'
                  nullable: false
                is_read:
                  type: string
                  description: ''
                  example: veniam
                  nullable: false
                status:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: ewqzyrj
                  nullable: false
              required:
                - user_id
                - message
                - is_read
                - status
      security: []
  '/api/notifications/{id}':
    get:
      summary: ''
      operationId: getApiNotificationsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiNotificationsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: false
                message:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Ea molestiae magnam vel earum id numquam.'
                  nullable: false
                is_read:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: false
                status:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: qhadwmsy
                  nullable: false
              required:
                - user_id
                - message
                - is_read
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiNotificationsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: 8
        required: true
        schema:
          type: integer
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
